#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# (c) Copyright 2023 Sensirion AG, Switzerland
#
#     THIS FILE IS AUTOMATICALLY GENERATED!
#
# Generator:     sensirion-driver-generator 0.22.0
# Product:       sfc6xxx
# Model-Version: 1.1
#

import time
import argparse
from sensirion_shdlc_driver import ShdlcSerialPort
from sensirion_driver_adapters.shdlc_adapter.shdlc_channel import ShdlcChannel
from sensirion_uart_sfc6xxx.device import Sfc6xxxDevice

parser = argparse.ArgumentParser()
parser.add_argument('--serial_port', '-p', default='COM1')
args = parser.parse_args()

with ShdlcSerialPort(port=args.serial_port, baudrate=115200) as port:
    channel = ShdlcChannel(port)
    sensor = Sfc6xxxDevice(channel)
    sensor.device_reset()
    time.sleep(2.0)
    serial_number = sensor.get_serial_number()
    print(f"serial_number: {serial_number}; "
          )
    sensor.set_setpoint(2)
    for i in range(10):
        try:
            averaged_measured_value = sensor.read_averaged_measured_value(50)
            print(f"averaged_measured_value: {averaged_measured_value}; "
                  )
        except BaseException:
            continue
    sensor.close_valve()
